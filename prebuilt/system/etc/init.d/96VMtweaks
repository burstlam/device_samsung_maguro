#!/system/bin/sh
# Consolidated T5UN4MI Script
# PrimeDirective, Sonicxml, DHO, Nuclearmistake
# With inspiration from DroidTh3ory

busybox=/system/xbin/busybox

sync
sysrw

#
# Enable Sysctl Tweaks
#
sysctl -p /system/etc/sysctl.conf

# change some processes' cgroups and priorities
until [ $($busybox pgrep com.android.systemui) ] ; do
  $busybox sleep 1
done

$busybox mkdir /dev/cpuctl/apps/kswapd
$busybox chown system system /dev/cpuctl/apps/kswapd/tasks
$busybox chmod 0660 /dev/cpuctl/apps/kswapd/tasks

$busybox echo 91 > /dev/cpuctl/apps/bg_non_interactive/cpu.shares
$busybox echo 400000 > /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us
$busybox echo 832 > /dev/cpuctl/apps/kswapd/cpu.shares
$busybox echo 1000000 > /dev/cpuctl/apps/kswapd/cpu.rt_period_us
$busybox echo 400000 > /dev/cpuctl/apps/kswapd/cpu.rt_runtime_us

$busybox renice -18 $($busybox pgrep com.android.systemui)
$busybox renice -10 $($busybox pgrep kblockd)
$busybox renice 10 $($busybox pgrep kswapd)

$busybox echo $($busybox pgrep com.android.systemui) > /dev/cpuctl/tasks
$busybox echo $($busybox pgrep kswapd) > /dev/cpuctl/apps/kswapd/tasks

# set cgroup_timer_slack for bg_non_interactive tasks
$busybox echo 100000000 > /dev/cpuctl/apps/bg_non_interactive/timer_slack.min_slack_ns

#
#
# Sysctl & VM Tweaks
#
busybox sysctl -w vm.page-cluster=3
busybox sysctl -w vm.drop_caches=3
busybox sysctl -w vm.dirty_expire_centisecs=1750
busybox sysctl -w vm.dirty_writeback_centisecs=3200
busybox sysctl -w kernel.random.write_wakeup_threshold=256
busybox sysctl -w kernel.random.read_wakeup_threshold=128
busybox sysctl -w fs.file-max=524288
busybox sysctl -w fs.inotify.max_queued_events=32000
busybox sysctl -w kernel.panic=0
busybox sysctl -w kernel.panic_on_oops=1
busybox sysctl -w kernel.msgmni=2048
busybox sysctl -w kernel.msgmax=64000
busybox sysctl -w kernel.shmmax=268435500
busybox sysctl -w kernel.sem=500,512000,64,2048
busybox sysctl -w kernel.threads-max=525810
echo "1" > /proc/sys/vm/laptop_mode
rm /dev/log/main

# cpu, sched and cache tweaks
$busybox echo 2 > /sys/devices/system/cpu/sched_mc_power_savings
$busybox echo 2 > /proc/cpu/alignment
$busybox echo 15000000 > /proc/sys/kernel/sched_latency_ns
$busybox echo 2000000 > /proc/sys/kernel/sched_min_granularity_ns
$busybox echo 3000000 > /proc/sys/kernel/sched_wakeup_granularity_ns
$busybox echo 92274688 > /proc/sys/vm/dirty_background_bytes
$busybox echo 104857600 > /proc/sys/vm/dirty_bytes


# Vibration
# echo "1650" /sys/class/misc/vibratorcontrol/vibrator_strength

#Deep Sleep
#
echo 6 > /sys/devices/system/cpu/cpu0/cpufreq/deepsleep_cpulevel
echo 2 > /sys/devices/system/cpu/cpu0/cpufreq/deepsleep_buslevel


# block tweaks
for i in /sys/block/*/queue ; do
  $busybox echo 0 > $i/iostats
  $busybox echo 512 > $i/nr_requests
  $busybox echo 256 > $i/read_ahead_kb
  $busybox echo 0 > $i/rotational
done

$busybox echo 0 > /sys/block/mmcblk0/queue/add_random
$busybox echo 128 > /sys/block/mmcblk0/queue/max_sectors_kb
$busybox echo 2 > /sys/block/mmcblk0/queue/rq_affinity

LOOP=`ls -d /sys/block/loop*`;
RAM=`ls -d /sys/block/ram*`;
MMC=`ls -d /sys/block/mmc*`;
for j in $LOOP $RAM
do
echo 0 > $j/queue/rotational;
echo 1024 > $j/queue/read_ahead_kb;
done

#
# START wrapper script that brute-forces rngd until it stays alive
#
####
rngd

#
# File System Tweaks & Cleanup
#
for m in "/" "/dev" "/proc" "/sys" "/system" "/data" "/data/data" "/cache" "/acct" "/dev/pts" "/dev/cpuctl" "/mnt/asec" "/mnt/obb"; do
  busybox mount -o remount,noatime,nodiratime,discard,noauto_da_alloc,nodev $m
done

echo "10" > /proc/sys/fs/lease-break-time

# LMK
$busybox echo 8084,10114,12144,15692,17722,22264 > /sys/module/lowmemorykiller/parameters/minfree

# low memory killer whitelist for common launchers
list="com.cyanogenmod.trebuchet com.android.launcher org.adw.launcher org.adwfreak.launcher com.anddoes.launcher com.gau.go.launcherex com.mobint.hololauncher com.mobint.hololauncher.hd com.teslacoilsw.launcher org.zeam com.chrislacy.actionlauncher.pro com.android.lmt com.tsf.shell"

for class in $list ; do
if [ $($busybox pgrep $class) ] ; then
pid=$($busybox pgrep $class)
    until [ -e /proc/$pid ] ; do
      $busybox sleep 1
    done
    $busybox echo -17 > /proc/$pid/oom_adj
    $busybox chmod 100 /proc/$pid/oom_adj
    break
fi
done

sync
sysro
