#!/system/bin/sh
busybox=/system/xbin/busybox
fstrim=/system/bin/fstrim
trimhelper=/data/trimhelper

# initialize suspend trim helper

if [ -s /data/trimhelper ] ; then
  $busybox sed -i "1s/.*/$($busybox date +%s)/" $trimhelper
else
  $busybox date +%s > $trimhelper
  $busybox echo 0 >> $trimhelper
fi

# trim file system if wipes have been performed
if [ ! -e /cache/trimmed ] ; then
  $fstrim /cache
  $busybox touch /cache/trimmed
fi

if [ ! -e /data/dalvik-cache/trimmed ] ; then
  $busybox mount -o remount,nodiscard /data
  $fstrim /data
  $busybox mount -o remount,discard /data
  $busybox touch /data/dalvik-cache/trimmed
fi

# change some processes' cgroups and priorities
until [ $($busybox pgrep com.android.systemui) ] ; do
  $busybox sleep 1
done

$busybox mkdir /dev/cpuctl/apps/kswapd
$busybox chown system system /dev/cpuctl/apps/kswapd/tasks
$busybox chmod 0660 /dev/cpuctl/apps/kswapd/tasks

$busybox echo 91 > /dev/cpuctl/apps/bg_non_interactive/cpu.shares
$busybox echo 400000 > /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us
$busybox echo 832 > /dev/cpuctl/apps/kswapd/cpu.shares
$busybox echo 1500000 > /dev/cpuctl/apps/kswapd/cpu.rt_period_us
$busybox echo 562500 > /dev/cpuctl/apps/kswapd/cpu.rt_runtime_us

$busybox renice -18 $($busybox pgrep com.android.systemui)
$busybox renice -10 $($busybox pgrep kblockd)
$busybox renice 10 $($busybox pgrep kswapd)

$busybox echo $($busybox pgrep com.android.systemui) > /dev/cpuctl/tasks
$busybox echo $($busybox pgrep kswapd) > /dev/cpuctl/apps/kswapd/tasks

